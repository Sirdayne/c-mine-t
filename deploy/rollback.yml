---

- hosts: all
  any_errors_fatal: true
  gather_facts: false
  vars:
    nginx_conf_blue: "{{ conf_path_available }}"
    nginx_conf_green: "{{ conf_path_available_reserve }}"
  tasks:

  - name: Include variables
    include_vars: vars/.env

  - name: Log into docker private registry and force re-authorization
    docker_login:
      registry: registry.ctgroup.io
      username: "gitlab-ci-token"
      password: "{{ lookup('env', 'CI_BUILD_TOKEN') }}"
      reauthorize: true

#
# B/G Deployment starts
#

  - name: Check which config is enabled
    stat:
      path: "{{ conf_path_enabled }}"
    register: nginx_conf

  - name: Start the app container (prod)
    docker_container:
      name: "duke_{{ tag }}_reserve"
      image: "{{ image }}"
      pull: true
      recreate: true
      restart_policy: "always"
      networks:
      - name: "main_{{ network_tag }}"
      ports:
      - "127.0.0.1:{{ duke_port }}:3000"
      etc_hosts: >
        {
        "cointelegraph.com" : "{{ ansible_host }}",
        "ar.cointelegraph.com" : "{{ ansible_host }}",
        "br.cointelegraph.com" : "{{ ansible_host }}",
        "de.cointelegraph.com" : "{{ ansible_host }}",
        "es.cointelegraph.com" : "{{ ansible_host }}",
        "it.cointelegraph.com" : "{{ ansible_host }}",
        "jp.cointelegraph.com" : "{{ ansible_host }}",
        "kr.cointelegraph.com" : "{{ ansible_host }}",
        "rs.cointelegraph.com" : "{{ ansible_host }}",
        "tr.cointelegraph.com" : "{{ ansible_host }}",
        "cointelegraph.com.br" : "{{ ansible_host }}",
        "gp.cointelegraph.com" : "{{ ansible_host }}",
        "ticker.cointelegraph.com" : "{{ ansible_host }}"
        }
      labels:
        service: "duke"
        tier: "frontend"
      log_driver: gelf
      log_options:
        gelf-address: "udp://graylog.ctgroup.io:12201"
        tag: "{{ tag }}.duke"
    when: (tag == "production" or tag == "cn_production") and nginx_conf.stat.lnk_target is search("green")

  - name: Start the app container (prod)
    docker_container:
      name: duke_{{ tag }}_reserve
      image: "{{ image }}"
      pull: true
      recreate: true
      restart_policy: always
      networks:
      - name: "main_{{ network_tag }}"
      ports:
      - "127.0.0.1:{{ duke_port_reserve }}:3000"
      etc_hosts: >
        {
        "cointelegraph.com" : "{{ ansible_host }}",
        "ar.cointelegraph.com" : "{{ ansible_host }}",
        "br.cointelegraph.com" : "{{ ansible_host }}",
        "de.cointelegraph.com" : "{{ ansible_host }}",
        "es.cointelegraph.com" : "{{ ansible_host }}",
        "it.cointelegraph.com" : "{{ ansible_host }}",
        "jp.cointelegraph.com" : "{{ ansible_host }}",
        "kr.cointelegraph.com" : "{{ ansible_host }}",
        "rs.cointelegraph.com" : "{{ ansible_host }}",
        "tr.cointelegraph.com" : "{{ ansible_host }}",
        "cointelegraph.com.br" : "{{ ansible_host }}",
        "gp.cointelegraph.com" : "{{ ansible_host }}",
        "ticker.cointelegraph.com" : "{{ ansible_host }}"
        }
      labels:
        service: "duke"
        tier: "frontend"
      log_driver: gelf
      log_options:
        gelf-address: "udp://graylog.ctgroup.io:12201"
        tag: "{{ tag }}.duke"
    when: (tag == "production" or tag == "cn_production") and nginx_conf.stat.lnk_target is search("blue")

  - name: Ensure web dir exists on host
    file:
      path: "/var/www/{{ tag }}.cointelegraph.com/"
      state: directory
      owner: www-data
      group: www-data
      mode: 0755

  - name: Ensure nuxt dir exists on host
    file:
      path: "/var/www/{{ tag }}.cointelegraph.com/public/_nuxt"
      state: directory
      owner: www-data
      group: www-data
      mode: 0755

  - name: Copy static files from container to host
    shell: |
      rm -rf /var/www/{{ tag }}.cointelegraph.com/client && \
      docker cp -a duke_{{ tag }}_reserve:/app/.nuxt/dist/client \
      /var/www/{{ tag }}.cointelegraph.com/.
    args:
      executable: /bin/bash

  - name: Move copied files to _nuxt folder
    shell: |
      cp -a /var/www/{{ tag }}.cointelegraph.com/client/* \
      /var/www/{{ tag }}.cointelegraph.com/public/_nuxt
    args:
      executable: /bin/bash

  - name: Copy more files from container to host
    shell: |
      docker cp -a duke_{{ tag }}_reserve:/app/static \
      /var/www/{{ tag }}.cointelegraph.com/public/. \
      && cp -r /var/www/{{ tag }}.cointelegraph.com/public/static/* \
      /var/www/{{ tag }}.cointelegraph.com/public/ \
      && rm -rf /var/www/{{ tag }}.cointelegraph.com/public/static
    args:
      executable: /bin/bash

  - name: Set required permissions to webroot folder
    file:
      path: /var/www/{{ tag }}.cointelegraph.com
      recurse: "yes"
      state: directory
      mode: 0755
      owner: www-data
      group: www-data

  - name: Check if new container is healthy
    shell: |
      docker exec -t duke_{{ tag }}_reserve curl -I localhost:3000
    register: healthcheck
    until: healthcheck.stdout.find("200 OK") != -1
    retries: 5
    delay: 10

  - name: Select nginx conf
    set_fact:
      nginx_conf: "{{ nginx_conf_green if (nginx_conf.stat.lnk_target is search('blue')) else nginx_conf_blue }}"

  - name: Create a symlink to enable config
    file:
      src: "{{ nginx_conf }}"
      dest: "{{ conf_path_enabled }}"
      state: link
      force: yes

  - name: Ensure nginx config is valid
    shell: nginx -t
    register: validity
    ignore_errors: true
    args:
      executable: /bin/bash

  - name: Reload nginx configuration
    shell: nginx -s reload
    args:
      executable: /bin/bash
    when: validity is success

  - name: Rename new container
    shell: |
      docker rename duke_{{ tag }} duke_{{ tag }}_old \
      && docker rename duke_{{ tag }}_reserve duke_{{ tag }}
    args:
      executable: /bin/bash

  - name: Stop and remove old container
    docker_container:
      name: duke_{{ tag }}_old
      state: absent

#
# B/G Deployment ends
#
